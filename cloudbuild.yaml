steps:
  # 1. Deploy da API principal
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/gpt-de-favela-api', '.']
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/gpt-de-favela-api']
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - 'gpt-de-favela-api'
      - '--image'
      - 'gcr.io/$PROJECT_ID/gpt-de-favela-api'
      - '--region'
      - 'southamerica-east1'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--set-secrets=SPTRANS_API_KEY=SPTRANS_API_KEY:latest,Maps_API_KEY=Maps_API_KEY:latest,GITHUB_TOKEN=GITHUB_TOKEN:latest' # Adicionado secrets
      - '--set-env-vars'
      - 'GCP_PROJECT_ID=$PROJECT_ID'

  # 2. Deploy do Agente de Segurança
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'functions'
      - 'deploy'
      - 'security-scanner'
      - '--gen2'
      - '--region=southamerica-east1'
      - '--runtime=python311'
      - '--source=./security_scanner'
      - '--entry-point=scan_image_vulnerabilities'
      - '--trigger-http'
      - '--allow-unauthenticated' # Permite que o Workflow chame a função

  # 3. Deploy do Agente de Manutenção (ainda sem gatilho, será configurado via Scheduler)
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'functions'
      - 'deploy'
      - 'dependency-updater'
      - '--gen2'
      - '--region=southamerica-east1'
      - '--runtime=python311'
      - '--source=./dependency_updater'
      - '--entry-point=check_dependencies'
      - '--no-trigger' # O gatilho será o Cloud Scheduler